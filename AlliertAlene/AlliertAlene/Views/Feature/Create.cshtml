@model AlliertAlene.Models.BaseDataViewModel

@{
    ViewBag.Title = "Create";
}
<link href="~/bower_components/bootstrap-datepicker/css/datepicker.css" rel="stylesheet" />
<h2>Create</h2>
@using (Html.BeginForm("Create", "Feature", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Legg til feature</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedRegionId, Model.Regions)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, new { htmlAttributes = new { @class = "form-control", @cols = 80, @rows = 10, style = "width: 300px; height=150px" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>
        <fieldset>
            <legend>Media</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Media, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.SelectedMediaId, Model.MediaTypes)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageUpload, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                    @Html.ValidationMessageFor(model => model.ImageUpload, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PosterUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PosterUpload, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                    @Html.ValidationMessageFor(model => model.PosterUpload, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Lokasjoner</legend>
            @for (int i = 0; i < Model.Locations.Count(); i++)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Locations[i].Location.Place, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.Locations[i].LocationId, Model.LocationList)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Locations[i].MarkerType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.Locations[i].MarkerType, Model.MarkerList)
                    </div>
                </div>
            }
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () { // will trigger when the document is ready
            $('.date').datepicker({
                language: "no",
                format: 'dd.mm.yyyy',
                startDate: '08.04.1940',
                endDate: '08.07.1940',
            }); //Initialise any date pickers
        });
    </script>

    <script src="~/Scripts/jquery.validate.min.js"></script>
}
